executors:
  node:
    docker:
      - image: circleci/node:lts

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - yarn-cache-netlify-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install dependencies
      command: yarn

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: yarn-cache-netlify-{{ checksum "yarn.lock" }}
      paths:
        - ./node_modules


version: 2.1
test:
  executor: node
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *install_node_modules
    - <<: *save_cache
    - run:
        name: Test
        command: echo "Tests are skipped for now"

build:
  executor: node
  steps:
    - checkout
    - <<: *restore_cache
    - <<: *install_node_modules
    - run:
        name: Build
        command: yarn build
    - persist_to_workspace:
        root: ./
        paths:
          - public

deploy:
  executor: node
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - <<: *restore_cache
    - <<: *install_node_modules
    - run:
        name: Install netlify-cli
        command: sudo npm install -g --silent netlify-cli
    - run:
        name: Deploy to Netlify
        command: netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir=public


#executors:
#  node-executor:
#    docker:
#      - image: circleci/node:lts
#commands:
#  build-app:
#    steps:
#      - checkout
#      - restore_cache:
#          keys:
#            - yarn-cache-{{ checksum "yarn.lock" }}
#      - run:
#          name: Resolving access to local ENV
#          command: npm set prefix=/home/circleci/npm && echo 'export PATH=$HOME/circleci/npm/bin:$PATH' >> /home/circleci/.bashrc
#      - run:
#          name: Prepare Netlify CLI for deploy
#          command: npm i -g netlify-cli
#      - run:
#          name: Install Dependencies
#          command: yarn install
#      - save_cache:
#          key: yarn-cache-{{ checksum "yarn.lock" }}
#          paths:
#            - ./node_modules
#      - run:
#          name: Build static website
#          command: yarn build
workflows:
  workflow:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
#jobs:
#  # Dev job
#  build:
#    executor: node-executor
#    working_directory: ~/repo
#    steps:
#      - build-app
#      - run:
#          name: Netlify Deploy
#          command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir=public
#  # Release job
#  release:
#    executor: node-executor
#    working_directory: ~/repo
#    steps:
#      - build-app
#      - run:
#          name: Netlify Deploy
#          command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod --dir=public
